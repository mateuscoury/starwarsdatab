{"version":3,"sources":["Context/createContext.js","Table.js","Context/ApiContext.js","App.js","index.js"],"names":["Context","createContext","Table","useContext","StarWarsContext","setText","dataFilter","text","setColumn","setCompa","setValue","column","comparison","value","id","htmlFor","type","onChange","event","target","filters","filterByName","name","handleName","data-testid","className","e","onClick","filterByNumericValues","arr","Array","from","document","querySelector","arr1","find","element","remove","map","index","column1","comparison1","value1","key","values","previous","filter","Object","includes","rotationPeriod","rotation_period","oribitalPeriod","orbital_period","diameter","climate","gravity","terrain","surfaceWater","surface_water","population","films","created","edited","url","StarWarsData","children","useState","data","setData","dataFilterSet","useEffect","a","fetch","response","json","results","fetchPlanets","filterArray","ele","toLowerCase","planeta","every","Number","functionAuxiliar","filterByNameFunc","ValueObject","Provider","App","src","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8d3d03f9.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst Context = createContext();\n\nexport default Context;\n","import React, { useContext } from \"react\";\nimport StarWarsContext from \"./Context/createContext\";\nimport \"./style.css\";\n\nfunction Table() {\n  const Context = useContext(StarWarsContext);\n\n  const {\n    setText,\n    dataFilter,\n    text,\n    setColumn,\n    setCompa,\n    setValue,\n    column,\n    comparison,\n    value,\n  } = Context;\n  // setar valores da coluna aqui ,depois enviar pelo botao de clique e setar no obj para depois\n\n  function handleName({ target }) {\n    setText({\n      ...text,\n      filters: {\n        ...text.filters,\n        filterByName: { name: target.value },\n      },\n    });\n  }\n  function handleValuesC() {\n    setText({\n      ...text,\n      filters: {\n        ...text.filters,\n        filterByNumericValues: [\n          ...text.filters.filterByNumericValues,\n          {\n            column,\n            comparison,\n            value,\n          },\n        ],\n      },\n    });\n    const arr = Array.from(document.querySelector(\".compar\"));\n    const arr1 = Array.from(document.querySelector(\".column\"));\n\n    arr.find((element) => element.value === comparison && element.remove());\n    arr1.find((element) => element.value === column && element.remove());\n  }\n\n  function removeFilter(values) {\n    setText((previous) => ({\n      ...text,\n      filters: {\n        ...text.filters,\n        filterByNumericValues: previous.filters.filterByNumericValues.filter(\n          (e) => !Object.values(e).includes(values)\n        ),\n      },\n    }));\n  }\n\n  return (\n    <div id=\"tableContainer\">\n      <label htmlFor=\"search label\">\n        Search:\n        <input\n          type=\"text\"\n          onChange={(event) => handleName(event)}\n          data-testid=\"name-filter\"\n        />\n      </label>\n      <select\n        className=\"column\"\n        data-testid=\"column-filter\"\n        onChange={({ target }) => setColumn(target.value)}\n      >\n        <option>population</option>\n        <option>orbital_period</option>\n        <option>diameter</option>\n        <option>rotation_period</option>\n        <option>surface_water</option>\n      </select>\n      <select\n        className=\"compar\"\n        data-testid=\"comparison-filter\"\n        onChange={(e) => setCompa(e.target.value)}\n      >\n        <option>maior que</option>\n        <option>menor que</option>\n        <option>igual a</option>\n      </select>\n      <input\n        type=\"number\"\n        data-testid=\"value-filter\"\n        onChange={(e) => setValue(e.target.value)}\n      />\n      <button type=\"button\" data-testid=\"button-filter\" onClick={handleValuesC}>\n        Adicionar Filtro\n      </button>\n      {text.filters.filterByNumericValues.map(\n        (\n          { column: column1, comparison: comparison1, value: value1 },\n          index\n        ) => (\n          <div data-testid=\"filter\" key={index}>\n            <p>{`${column1} ${comparison1} ${value1}`}</p>\n            <button type=\"button\" onClick={() => removeFilter(value1)}>\n              X\n            </button>\n          </div>\n        )\n      )}\n\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>rotation_period</th>\n            <th>orbital_period</th>\n            <th>diameter</th>\n            <th>climate</th>\n            <th>gravity</th>\n            <th>terrain</th>\n            <th>surface_water</th>\n            <th>population</th>\n            <th>films</th>\n            <th>created</th>\n            <th>edited</th>\n            <th>url</th>\n          </tr>\n        </thead>\n        <tbody>\n          {dataFilter &&\n            dataFilter.map(\n              (\n                {\n                  name,\n                  rotation_period: rotationPeriod,\n                  orbital_period: oribitalPeriod,\n                  diameter,\n                  climate,\n                  gravity,\n                  terrain,\n                  surface_water: surfaceWater,\n                  population,\n                  films,\n                  created,\n                  edited,\n                  url,\n                },\n                index\n              ) => (\n                <tr key={index}>\n                  <td>{name}</td>\n                  <td>{rotationPeriod}</td>\n                  <td>{oribitalPeriod}</td>\n                  <td>{diameter}</td>\n                  <td>{climate}</td>\n                  <td>{gravity}</td>\n                  <td>{terrain}</td>\n                  <td>{surfaceWater}</td>\n                  <td>{population}</td>\n                  <td>{films}</td>\n                  <td>{created}</td>\n                  <td>{edited}</td>\n                  <td>{url}</td>\n                </tr>\n              )\n            )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from './createContext';\n\nconst functionAuxiliar = (planeta, filterByNumericValues) => (\n\n  filterByNumericValues.every(({ column, comparison, value }) => {\n    if (comparison === 'maior que') return Number(planeta[column]) > Number(value);\n    if (comparison === 'menor que') return Number(planeta[column]) < Number(value);\n    return Number(planeta[column]) === Number(value);\n  })\n\n);\nfunction StarWarsData({ children }) {\n  const [data, setData] = useState([]);\n  const [column, setColumn] = useState('');\n  const [comparison, setCompa] = useState('');\n  const [value, setValue] = useState();\n  const [dataFilter, dataFilterSet] = useState([]);\n  const [text, setText] = useState({\n    filters: {\n      filterByName: {\n        name: '',\n      },\n      filterByNumericValues: [\n\n      ],\n    },\n  });\n\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      const response = await fetch('https://swapi-trybe.herokuapp.com/api/planets/');\n      const { results } = await response.json();\n      setData(results);\n      dataFilterSet(results);\n    };\n    fetchPlanets();\n  }, []);\n\n  useEffect(() => {\n    const filterByNameFunc = () => {\n      const { filters: { filterByName: { name }, filterByNumericValues } } = text;\n\n      const filterArray = data\n        .filter((ele) => ele.name.toLowerCase().includes(name))\n        .filter((ele) => functionAuxiliar(ele, filterByNumericValues));\n\n      dataFilterSet(filterArray);\n    };\n    filterByNameFunc();\n  }, [data, text]);\n\n  /* useEffect(() => {\n    const filterValue = () => {\n      if (filterNum) {\n        setFilterNum(false);\n      } else setFilterNum(true);\n    };\n    filterValue();\n  }, [filterNum, text]); */\n\n  const ValueObject = {\n    data,\n    setText,\n    text,\n    dataFilter,\n    setColumn,\n    setValue,\n    setCompa,\n    comparison,\n    column,\n    value,\n    dataFilterSet,\n\n  };\n  return (\n    <Context.Provider value={ ValueObject }>\n      {children}\n    </Context.Provider>\n  );\n}\n\nStarWarsData.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default StarWarsData;\n","import React from \"react\";\nimport Table from \"./Table\";\nimport Provider from \"./Context/ApiContext\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div id=\"Container\">\n      <Provider>\n        <div id=\"AreaImage\">\n          <img src=\"https://logodownload.org/wp-content/uploads/2015/12/star-wars-logo-3-1.png\" />\n        </div>\n        <Table />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}