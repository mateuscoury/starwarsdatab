{"version":3,"sources":["Context/createContext.js","Table.js","Context/ApiContext.js","App.js","index.js"],"names":["Context","createContext","Table","useContext","StarWarsContext","setText","dataFilter","text","setColumn","setCompa","setValue","column","comparison","value","htmlFor","type","onChange","event","target","filters","filterByName","name","handleName","data-testid","className","e","onClick","filterByNumericValues","arr","Array","from","document","querySelector","arr1","find","element","remove","map","index","column1","comparison1","value1","key","values","previous","filter","Object","includes","rotationPeriod","rotation_period","oribitalPeriod","orbital_period","diameter","climate","gravity","terrain","surfaceWater","surface_water","population","films","created","edited","url","StarWarsData","children","useState","data","setData","dataFilterSet","useEffect","a","fetch","response","json","results","fetchPlanets","filterArray","ele","toLowerCase","planeta","every","Number","functionAuxiliar","filterByNameFunc","ValueObject","Provider","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d58a0fc2.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst Context = createContext();\r\n\r\nexport default Context;\r\n","import React, { useContext } from 'react';\r\nimport StarWarsContext from './Context/createContext';\r\nimport './style.css';\r\n\r\nfunction Table() {\r\n  const Context = useContext(StarWarsContext);\r\n\r\n  const { setText, dataFilter, text,\r\n    setColumn, setCompa, setValue,\r\n    column, comparison, value } = Context;\r\n  // setar valores da coluna aqui ,depois enviar pelo botao de clique e setar no obj para depois\r\n\r\n  function handleName({ target }) {\r\n    setText({\r\n      ...text,\r\n      filters: {\r\n        ...text.filters,\r\n        filterByName: { name: target.value },\r\n      },\r\n    });\r\n  }\r\n  function handleValuesC() {\r\n    setText({\r\n      ...text,\r\n      filters: {\r\n        ...text.filters,\r\n        filterByNumericValues: [\r\n          ...text.filters.filterByNumericValues,\r\n          {\r\n            column,\r\n            comparison,\r\n            value,\r\n\r\n          },\r\n        ],\r\n      },\r\n    });\r\n    const arr = Array.from(document.querySelector('.compar'));\r\n    const arr1 = Array.from(document.querySelector('.column'));\r\n\r\n    arr.find((element) => element.value === comparison && element.remove());\r\n    arr1.find((element) => element.value === column && element.remove());\r\n  }\r\n\r\n  function removeFilter(values) {\r\n    setText((previous) => ({\r\n      ...text,\r\n      filters: {\r\n        ...text.filters,\r\n        filterByNumericValues:\r\n         previous.filters.filterByNumericValues\r\n           .filter((e) => !Object.values(e).includes(values)),\r\n\r\n      },\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"search label\">\r\n        Search:\r\n        <input\r\n          type=\"text\"\r\n          onChange={ (event) => handleName(event) }\r\n          data-testid=\"name-filter\"\r\n        />\r\n      </label>\r\n      <select\r\n        className=\"column\"\r\n        data-testid=\"column-filter\"\r\n        onChange={ ({ target }) => setColumn(target.value) }\r\n      >\r\n        <option>population</option>\r\n        <option>orbital_period</option>\r\n        <option>diameter</option>\r\n        <option>rotation_period</option>\r\n        <option>surface_water</option>\r\n      </select>\r\n      <select\r\n        className=\"compar\"\r\n        data-testid=\"comparison-filter\"\r\n        onChange={ (e) => setCompa(e.target.value) }\r\n      >\r\n        <option>maior que</option>\r\n        <option>menor que</option>\r\n        <option>igual a</option>\r\n      </select>\r\n      <input\r\n        type=\"number\"\r\n        data-testid=\"value-filter\"\r\n        onChange={ (e) => setValue(e.target.value) }\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        data-testid=\"button-filter\"\r\n        onClick={ handleValuesC }\r\n      >\r\n        Adicionar Filtro\r\n      </button>\r\n      {text.filters.filterByNumericValues.map(\r\n        ({ column: column1, comparison: comparison1, value: value1 }, index) => (\r\n          <div data-testid=\"filter\" key={ index }>\r\n            <p>{`${column1} ${comparison1} ${value1}`}</p>\r\n            <button type=\"button\" onClick={ () => removeFilter(value1) }>X</button>\r\n          </div>\r\n        ),\r\n      )}\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>rotation_period</th>\r\n            <th>orbital_period</th>\r\n            <th>diameter</th>\r\n            <th>climate</th>\r\n            <th>gravity</th>\r\n            <th>terrain</th>\r\n            <th>surface_water</th>\r\n            <th>population</th>\r\n            <th>films</th>\r\n            <th>created</th>\r\n            <th>edited</th>\r\n            <th>url</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {dataFilter && dataFilter.map(\r\n            ({ name,\r\n              rotation_period: rotationPeriod, orbital_period: oribitalPeriod,\r\n              diameter, climate, gravity,\r\n              terrain, surface_water: surfaceWater,\r\n              population, films, created, edited, url },\r\n            index) => (\r\n              <tr key={ index }>\r\n                <td>{name}</td>\r\n                <td>{rotationPeriod}</td>\r\n                <td>{oribitalPeriod}</td>\r\n                <td>{diameter}</td>\r\n                <td>{climate}</td>\r\n                <td>{gravity}</td>\r\n                <td>{terrain}</td>\r\n                <td>{surfaceWater}</td>\r\n                <td>{population}</td>\r\n                <td>{films}</td>\r\n                <td>{created}</td>\r\n                <td>{edited}</td>\r\n                <td>{url}</td>\r\n              </tr>\r\n            ),\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Context from './createContext';\r\n\r\nconst functionAuxiliar = (planeta, filterByNumericValues) => (\r\n\r\n  filterByNumericValues.every(({ column, comparison, value }) => {\r\n    if (comparison === 'maior que') return Number(planeta[column]) > Number(value);\r\n    if (comparison === 'menor que') return Number(planeta[column]) < Number(value);\r\n    return Number(planeta[column]) === Number(value);\r\n  })\r\n\r\n);\r\nfunction StarWarsData({ children }) {\r\n  const [data, setData] = useState([]);\r\n  const [column, setColumn] = useState('');\r\n  const [comparison, setCompa] = useState('');\r\n  const [value, setValue] = useState();\r\n  const [dataFilter, dataFilterSet] = useState([]);\r\n  const [text, setText] = useState({\r\n    filters: {\r\n      filterByName: {\r\n        name: '',\r\n      },\r\n      filterByNumericValues: [\r\n\r\n      ],\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchPlanets = async () => {\r\n      const response = await fetch('https://swapi-trybe.herokuapp.com/api/planets/');\r\n      const { results } = await response.json();\r\n      setData(results);\r\n      dataFilterSet(results);\r\n    };\r\n    fetchPlanets();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filterByNameFunc = () => {\r\n      const { filters: { filterByName: { name }, filterByNumericValues } } = text;\r\n\r\n      const filterArray = data\r\n        .filter((ele) => ele.name.toLowerCase().includes(name))\r\n        .filter((ele) => functionAuxiliar(ele, filterByNumericValues));\r\n\r\n      dataFilterSet(filterArray);\r\n    };\r\n    filterByNameFunc();\r\n  }, [data, text]);\r\n\r\n  /* useEffect(() => {\r\n    const filterValue = () => {\r\n      if (filterNum) {\r\n        setFilterNum(false);\r\n      } else setFilterNum(true);\r\n    };\r\n    filterValue();\r\n  }, [filterNum, text]); */\r\n\r\n  const ValueObject = {\r\n    data,\r\n    setText,\r\n    text,\r\n    dataFilter,\r\n    setColumn,\r\n    setValue,\r\n    setCompa,\r\n    comparison,\r\n    column,\r\n    value,\r\n    dataFilterSet,\r\n\r\n  };\r\n  return (\r\n    <Context.Provider value={ ValueObject }>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nStarWarsData.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default StarWarsData;\r\n","import React from 'react';\r\nimport Table from './Table';\r\nimport Provider from './Context/ApiContext';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Provider>\r\n\r\n        <Table />\r\n\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}